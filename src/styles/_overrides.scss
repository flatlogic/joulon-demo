.container-fluid {
  padding-left: 30px;
  padding-right: 30px;
}

.navbar {
  height: $navbar-height;
  border: none;
  font-weight: 500;
  justify-content: flex-start;

  .nav {
    height: 100%;
  }

  .nav-item {
    .nav-link {
      display: flex;
      align-items: center;
      color: var(--navbar-link-color);
      height: 100%;
      position: relative;
      padding: 0.5rem;

      @include hover {
        color: var(--navbar-link-hover-color);
        background: var(--navbar-link-hover-bg);
      }

      .la {
        font-size: 20px;
      }
    }
  }

  .nav > .nav-item > .nav-link.bs-tether-target.show {
    display: flex !important;
  }

  .input-group {
    width: 245px;
  }

  .form-control {
    line-height: 1.7;
    padding: 0.6rem 0.85rem;
  }

  .dropdown-menu {
    margin: 0;
  }

  @include media-breakpoint-down(sm) {
    font-size: $font-size-lg;
  }
}

.text-muted {
  color: var(--text-muted) !important;
}

.progress-bar {
  @include box-shadow(none);
}

.progress {
  height: $spacer * 1.3;
  margin-bottom: $spacer / 2;
}

.progress-sm {
  height: 10px;
}

.progress-xs {
  height: 5px;
}

.form-control {
  font-family: $font-family-base;
  box-shadow: none;
  transition: border-color ease-in-out 0.15s, background-color ease-in-out 0.15s;

  &:focus {
    box-shadow: none;
  }

  &.no-border {
    border: none;
    background-color: darken($input-bg, 5%);

    &:focus {
      background-color: darken($input-bg, 7%);
    }
  }
}

.a {
  cursor: pointer;
  color: var(--link-color);

  &:hover {
    color: var(--link-hover-color)
  }
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $spacer;
  line-height: inherit;
  color: var(--text-muted);
  border: 0;
  border-bottom: 1px solid #e5e5e5;
  font-size: 15px;
  font-weight: $font-weight-normal;
}

.input-sm {
  font-size: 13px;
}

.alert {
  font-size: $font-size-sm;

  .close {
    color: rgba(#000, 0.4);
  }
}

.alert-sm {
  padding: 10px 15px;

  .close {
    font-size: 20px;
    top: 0;
    right: -8px;
  }
}

/*  Badge */
// Add colors for badges
.badge {
  padding: 4px;
  font-weight: $font-weight-bold;
  font-size: 11px;
}

.badge-success,
.badge-info,
.badge-warning,
.badge-danger {
  color: $white;
}

.badge-white {
  @include badge-variant($white);
}

.badge-default {
  @include badge-variant($gray-300);
}

.badge {
  &.badge-pill {
    padding: 0.4em 0.6em;
    font-weight: 700;
  }

  .list-group-item > & {
    margin-top: 2px;
  }
}

.table-no-border {
  margin-left: -$table-cell-padding;
  margin-right: -$table-cell-padding;

  > thead > tr > th,
  > thead > tr > td,
  > tbody > tr > th,
  > tbody > tr > td,
  > tfoot > tr > th,
  > tfoot > tr > td {
    border-top: 0;
  }
}

.table-sm {
  font-size: $font-size-sm;

  > thead > tr > th,
  > thead > tr > td,
  > tbody > tr > th,
  > tbody > tr > td,
  > tfoot > tr > th,
  > tfoot > tr > td {
    padding: 6px;
  }

  &.table-no-border {
    margin-left: -4px;
    margin-right: -4px;
  }
}

.small,
small {
  font-size: 85%;
}

///////// Buttons //////////
button {
  cursor: pointer;
}

.dropdown-toggle::after {
  font-family: LineAwesome;
  content: "\F110";
  border: none;
  width: auto;
  height: auto;
  vertical-align: baseline;
  opacity: .8;
  font-size: 85%;
}

.btn-link {
  color: var(--link-color);

  &:hover {
    color: var(--link-hover-color)
  }
  &:focus {
    box-shadow: none;
  }
}

.btn-secondary {
  border-color: $gray-400;
  color: $gray-800;
}

.btn-success,
.btn-info,
.btn-warning {
  color: $white;

  &:hover {
    color: $white;
  }
}

.btn-gray {
  border-color: $gray-400;
  color: $gray-700;
}

.btn-default {
  border-color: $gray-400;
  color: $gray-800;
}

.btn-xs {
  padding: 1px 5px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}

.btn-secondary.active {
  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
}

.btn {
  font-family: $font-family-sans-serif;
  background-image: linear-gradient(to right, #ffffff26, #fff0);

  .glyphicon {
    top: 3px;
  }
}

.btn,
.btn-inverse,
.btn-gray {
  &:not(.active) {
    box-shadow: none !important;
  }
}

.btn-rounded {
  @include border-radius(6px);
}

.btn-rounded-f {
  @include border-radius(50px);
}

.btn-outline {
  @include button-variant(transparent, $white);

  @include hover-focus() {
    background-color: rgba($white, 0.1);
  }
}

///////// Dropdowns //////////

.dropdown {
  &.show {
    .dropdown-menu {
      display: block;
    }
  }

  .dropdown-menu {
    background: var(--dropdown-bg-color);
  }
}

.dropdown-menu-right {
  left: auto;
  right: 0;
}

.nav-item.dropdown {
  &.show {
    .nav-link.active {
      background: var(--navbar-link-active-bg);
      color: var(--navbar-link-active-color);
    }
  }
}

.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: 4px dashed;
  border-top: 4px solid;
  // IE8
  border-right: 4px solid transparent;
  border-left: 4px solid transparent;
}

///////// Breadcrumbs //////////

.breadcrumb {
  color: $gray-600;
  margin-bottom: 1.5rem;
  margin-top: 0;

  > .active {
    font-weight: $font-weight-semi-bold;
  }

  padding: 0;
}

.breadcrumb-item + .breadcrumb-item::before {
  content: '>';
  color: $gray-600;
}

///////// Glyphicons //////////

.glyphicon {
  vertical-align: middle;
}

///////// Tooltips //////////

.bs-tether-target.show {
  display: inline-block !important;
}

.tooltip.in {
  opacity: 1;
}

.tooltip-inner {
  @include border-radius(3px);
}

////////// Headings //////////

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  small,
  .small {
    font-weight: $font-weight-thin;
    font-size: 75%;
    color: var(--text-muted);
  }
}

h1, .h1 {
  color: #00a9b5;
}

h2, .h2 {
  color: #00c5cd;
}

h3, .h3 {
  color: #64e0e5;
}

h4, .h4 {
  color: #707879;
}

h5, .h5 {
  color: #acacad;
}

h6, .h6 {
  color: #bcbcbd;
}

p {
  color: var(--text-color);
}


///////// React Bootstrap Table /////////
.react-bootstrap-table {
  overflow-x: auto;
  overflow-y: hidden;
}

///////// Tables /////////
.table, table {
  color: var(--text-color);
}

///////// Grid /////////
@for $i from 1 through $grid-columns {
  .col-xs-#{$i} {
    flex: 0 0 percentage($i / $grid-columns);
  }
}
